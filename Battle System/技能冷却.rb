#==============================================================================
# ■ 技能冷却 by 老鹰（https://github.com/OneEyedEagle/EAGLE-RGSS3）
#==============================================================================
$imported ||= {}
$imported["EAGLE-SkillCD"] = "1.0.0"
#==============================================================================
# - 2022.11.2.21 
#==============================================================================
# - 本插件新增了战斗中使用技能后的冷却时间
#-----------------------------------------------------------------------------
# 【设置】
#
#   在 数据库-技能 的备注栏中填写下式中的其一，来获得对应的技能冷却效果：
#
# 1. <cd v=数字>     → 设置本技能独立的冷却时间
#
#     其中 数字 替换为技能冷却回合数
#
#  → 示例：
#
#    技能A 填写了 <cd v=1> ，
#    则在本回合使用后，下一回合不可使用，再下一回合才可以继续使用
#
#-----------------------------------------------
# 2. <cd t=type v=数字>   → 设置本技能的类型的共用冷却时间
#
#     其中 数字 替换为技能冷却回合数
#
#  → 示例：
#
#    技能B 填写了 <cd t=type v=2>，
#    则在本回合使用后，该技能的全部有相同技能类型的技能都进入2回合冷却
#
#-----------------------------------------------
# 3. <cd t=字符 v=数字>   → 设置本技能的自定义类型，以及该类型的共用冷却时间
#
#     其中 字符 替换为任意字符（不含空格）
#     其中 数字 替换为技能冷却回合数
#
#  → 示例：
#
#    技能C 填写了 <cd t=治疗类 v=1>
#    技能D 填写了 <cd t=治疗类 v=2>
#    技能E 填写了 <cd t=伤害类 v=3>
#    则在本回合使用了技能C后，技能C和技能D都会进入1回合冷却
#    则在本回合使用了技能D后，技能C和技能D都会进入2回合冷却
#    则在本回合使用了技能E后，技能E进入3回合冷却
#
#-----------------------------------------------------------------------------
# 【高级】
#
#   以下的 skill 均为 $data_skills[id]
#
#  battler.add_cd(skill, d = nil)  
#    → 为角色的 skill 技能增加 d 回合冷却
#      如果 d 为nil，则重置为技能预设的冷却时间
#
#  battler.dec_cd(skill = nil, d = 1)
#    → 为角色的 skill 技能减少 d 回合冷却
#      如果 skill 为nil，则为全部技能减少 d 回合冷却
#
#  battler.get_cd(skill)
#    → 获取角色的 skill 技能的当前剩余冷却时间
#      如果未在冷却中，则返回 0
#
#==============================================================================

class RPG::UsableItem
  #--------------------------------------------------------------------------
  # ● 初始化
  #--------------------------------------------------------------------------
  alias eagle_skill_cd_init initialize
  def initialize
    eagle_skill_cd_init
    @cd_value = 0
    @cd_type = nil  # 正数是独立cd 负数是技能类型cd 字符串是自定义类型cd
  end
  #--------------------------------------------------------------------------
  # ● 检查备注
  #--------------------------------------------------------------------------
  def check_cd_note
    @note =~ /<cd ?(.*?)>/im
    if $1 == nil
      @cd_type = 0
      @cd_value = 0 
      return 
    end
    h = EAGLE_COMMON.parse_tags($1)
    @cd_type = h[:t]
    if @cd_type == nil || @cd_type == "id"
      @cd_type = @id
    elsif @cd_type == "type"
      @cd_type = get_cd_by_type_id 
    end
    @cd_value = h[:v].to_i || 0
  end
  #--------------------------------------------------------------------------
  # ● 获取cd类型
  #--------------------------------------------------------------------------
  def cd_type 
    check_cd_note if @cd_type == nil 
    @cd_type
  end
  #--------------------------------------------------------------------------
  # ● 获取cd数
  #--------------------------------------------------------------------------
  def cd 
    check_cd_note if @cd_type == nil 
    @cd_value
  end
  #--------------------------------------------------------------------------
  # ● 当cd类型为 type 时，获取标识符
  #--------------------------------------------------------------------------
  def get_cd_by_type_id
    0
  end
end

class RPG::Skill
  #--------------------------------------------------------------------------
  # ● 当cd类型为 type 时，获取标识符
  #--------------------------------------------------------------------------
  def get_cd_by_type_id
    - @stype_id 
  end
end 

class RPG::Item
  #--------------------------------------------------------------------------
  # ● 当cd类型为 type 时，获取标识符
  #--------------------------------------------------------------------------
  def get_cd_by_type_id
    - @itype_id 
  end
end 

class Game_BattlerBase
  #--------------------------------------------------------------------------
  # ● 初始化对象
  #--------------------------------------------------------------------------
  alias eagle_skill_cd_init initialize
  def initialize
    @skill_cds = {}
    eagle_skill_cd_init
  end
  #--------------------------------------------------------------------------
  # ● 增加技能CD
  #--------------------------------------------------------------------------
  def add_cd(skill, d = nil)
    if d == nil
      v = skill.cd
      @skill_cds[skill.cd_type] = v + 1 if v > 0
    else
      @skill_cds[skill.cd_type] += d
    end
  end
  #--------------------------------------------------------------------------
  # ● 减少技能CD
  #--------------------------------------------------------------------------
  def dec_cd(skill = nil, d = 1)
    if skill == nil 
      return dec_all_cd(d)
    end
    return if get_cd(skill) <= 0
    v = @skill_cds[skill.cd_type]
    @skill_cds[skill.cd_type] = [v - d, 0].max
  end
  #--------------------------------------------------------------------------
  # ● 减少全部技能CD
  #--------------------------------------------------------------------------
  def dec_all_cd(d = 1)
    @skill_cds.each { |k, v| @skill_cds[k] -= d if v > 0 }
  end
  #--------------------------------------------------------------------------
  # ● 获取技能剩余CD
  #--------------------------------------------------------------------------
  def get_cd(skill)
    @skill_cds[-skill.stype_id] || @skill_cds[skill.cd_type] || 0
  end
  #--------------------------------------------------------------------------
  # ● 检查技能的使用条件
  #--------------------------------------------------------------------------
  alias eagle_skill_cd_skill_conditions_met? skill_conditions_met?
  def skill_conditions_met?(skill)
    eagle_skill_cd_skill_conditions_met?(skill) && get_cd(skill) == 0
  end
end

class Game_Battler
  #--------------------------------------------------------------------------
  # ● 回合结束处理
  #--------------------------------------------------------------------------
  alias eagle_skill_cd_on_turn_end on_turn_end
  def on_turn_end
    eagle_skill_cd_on_turn_end
    dec_all_cd
  end
  #--------------------------------------------------------------------------
  # ● 战斗结束处理
  #--------------------------------------------------------------------------
  alias eagle_skill_cd_on_battle_end on_battle_end
  def on_battle_end
    eagle_skill_cd_on_battle_end
    @skill_cds.clear
  end
end

class Window_SkillList < Window_Selectable
  #--------------------------------------------------------------------------
  # ● 绘制项目
  #--------------------------------------------------------------------------
  def draw_item(index)
    skill = @data[index]
    if skill
      rect = item_rect(index)
      rect.width -= 4
      draw_item_name(skill, rect.x, rect.y, enable?(skill))
      v = @actor.get_cd(skill)
      if v == 0
        draw_skill_cost(rect, skill)
      else
        draw_current_cd(rect, skill)
      end
    end
  end
  #--------------------------------------------------------------------------
  # ● 绘制剩余CD
  #--------------------------------------------------------------------------
  def draw_current_cd(rect, skill)
    change_color(system_color)
    draw_text(rect, "#{@actor.get_cd(skill)} CD", 2)
  end
end 

class Scene_Battle
  #--------------------------------------------------------------------------
  # ● 使用技能／物品
  #--------------------------------------------------------------------------
  alias eagle_skill_cd_use_item use_item
  def use_item
    eagle_skill_cd_use_item
    item = @subject.current_action.item
    @subject.add_cd(item) if item.is_a?(RPG::Skill)
  end
end 