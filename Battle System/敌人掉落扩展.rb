#==============================================================================
# ■ 敌人掉落扩展  by 老鹰（http://oneeyedeagle.lofter.com/）
#=============================================================================
$imported ||= {}
$imported["EAGLE-EnemyDropEX"] = true
#=============================================================================
# - 2021.9.10.17
#=============================================================================
# - 敌人死亡时进行掉落物判定，若为我方造成最后一击，我方角色将影响物品掉落率
#---------------------------------------------------------------------------
# 【掉落池】
#
# - 新增多个敌人共同使用的掉落池
#   在常量中设置指定名称的掉落池中的物品及其概率后，在敌人备注栏内填入
#
#      <drop pool: name>
#
#   其中 name 替换成掉落池的名称，即可使该敌人追加整个掉落池的判定（逐个判定）
#
#   示例：
#     <drop pool: 1> 将会索引 DROP_POOLS 常量中 "1" 名称的掉落池
#
#---------------------------------------------------------------------------
# 【掉落扩展】
#
# - 新增对单个敌人掉落物的扩展
#
#   在敌人备注栏内填入（可用空格或逗号分隔内部各项）（可重复填入）（每项只处理1个物品）
#
#    <drop: 物品类型字符与物品id 掉落概率小数 出现条件>
#
#      物品类型字符： i 代表物品， w 代表武器， a 代表护甲 （其余值无效）
#      物品id： 对应类型的数据库中物品的id号
#      掉落概率小数： 物品的掉落概率小数，范围为 0.0 ~ 1.0
#      出现条件（可选）：当字符串被eval后返回的值为true时，启用该条物品掉落
#             可用 s 代表 $game_switches， v 代表 $game_variables
#
# - 示例：
#     <drop: i1 1.0>
#        → 必定增加掉落一个 1号物品
#
#     <drop: i5 0.5>
#        → 以 0.5/1 的概率 增加掉落一个 5号物品
#
#     <drop: w10,0.4,$game_switches[1]>
#        → 当1号开关开启时，以 40% 的概率 增加掉落一个 10号武器
#
#     <drop: a1, 1, $game_variables[1] > 5>
#        → 当1号变量大于5时，必定掉落一个 1号护甲
#
#==============================================================================
module DROP_EX
  #--------------------------------------------------------------------------
  # ● 【常量】掉落池
  #--------------------------------------------------------------------------
  DROP_POOLS = {
    # 掉落池的名称 => { 物品类型字符和id的字符串 => 掉落概率小数 },
    "1" => { "i1" => 1.0, },
  }

  #--------------------------------------------------------------------------
  # ● 【常量】获取敌人追加的掉落池的正则
  #--------------------------------------------------------------------------
  DROP_POOL_REGEXP = /<(?i:drop pool): *(.*)>/
  #--------------------------------------------------------------------------
  # ● 【常量】获取敌人追加掉落的正则
  #  $1 - 类型字符与id  $2 - 概率小数  $3 - 出现条件
  #--------------------------------------------------------------------------
  EX_DROP_REGEXP = /<(?i:drop):?[ ,]*([iwa]\d+)[ ,]*([\.\d]+)[ ,]*(.*)>/
  #--------------------------------------------------------------------------
  # ● 设置我方角色造成最后一击时，对物品掉落率的影响
  #  user 为我方战斗角色的实例，具体参考 Game_Actor类
  #  pro 为敌人掉落物中某一物品的原始掉落率（小数）
  #  需要返回新的掉落率（小数）
  #--------------------------------------------------------------------------
  def self.user_affect_prob(user, pro)
    v = 1 - 50 / (50 + user.luk)
    return pro * v
  end
  #--------------------------------------------------------------------------
  # ● 【常量】类型字符与对应INDEX
  #--------------------------------------------------------------------------
  EX_DROP_KIND_CHAR_TO_INDEX = { 'i' => 1, 'w' => 2, 'a' => 3 }
end

class Game_Enemy < Game_Battler
  #--------------------------------------------------------------------------
  # ● 初始化对象
  #--------------------------------------------------------------------------
  alias eagle_item_drop_ex_init initialize
  def initialize(index, enemy_id)
    eagle_item_drop_ex_init(index, enemy_id)
    @drop_items = []
  end
  #--------------------------------------------------------------------------
  # ● 应用伤害
  #--------------------------------------------------------------------------
  def execute_damage(user)
    super(user)
    @drop_items = calc_drop_items(user) if self.hp <= 0
  end
  #--------------------------------------------------------------------------
  # ● （覆盖）获取掉落物品数组
  #--------------------------------------------------------------------------
  def make_drop_items
    @drop_items
  end
  #--------------------------------------------------------------------------
  # ● 生成掉落物品数组
  #--------------------------------------------------------------------------
  def calc_drop_items(user)
    r = enemy.drop_items.inject([]) do |r, di|
      if di.kind > 0 && rand < drop_item_pro(user, 1.0 / di.denominator)
        r.push(item_object(di.kind, di.data_id))
      else
        r
      end
    end
    r += calc_extra_drops(user)
    r += calc_drop_pool(user)
    r
  end
  #--------------------------------------------------------------------------
  # ● 生成额外掉落物品数组
  #--------------------------------------------------------------------------
  def calc_extra_drops(user)
    s = $game_switches; v = $game_variables
    enemy.note.scan(DROP_EX::EX_DROP_REGEXP).inject([]) do |r, param|
      next r if (param[2] != "" && eval(param[2]) == false)
      pro = (param[1] != "" ? param[1].to_f : 1)
      if rand < drop_item_pro(user, pro)
        r.push(item_object(param[0].slice!(0, 1), param[0].to_i))
      else
        r
      end
    end
  end
  #--------------------------------------------------------------------------
  # ● 生成额外掉落池中的物品数组
  #--------------------------------------------------------------------------
  def calc_drop_pool(user)
    enemy.note.scan(DROP_EX::DROP_POOL_REGEXP).inject([]) do |r, param|
      next r if DROP_EX::DROP_POOLS[param[0]].nil?
      DROP_EX::DROP_POOLS[param[0]].each do |str, pro|
        if rand < drop_item_pro(user, pro)
          t = str.dup
          r.push(item_object(t.slice!(0, 1), t.to_i))
        end
      end
      r
    end
  end
  #--------------------------------------------------------------------------
  # ● 获取物品掉率
  #--------------------------------------------------------------------------
  def drop_item_pro(user, init_pro)
    pro = init_pro
    pro = DROP_EX.user_affect_prob(user, init_pro) if user && user.actor?
    return pro * drop_item_rate
  end
  #--------------------------------------------------------------------------
  # ● 获取物品实例
  #--------------------------------------------------------------------------
  alias eagle_item_drop_ex_item_object item_object
  def item_object(kind, data_id)
    kind = DROP_EX::EX_DROP_KIND_CHAR_TO_INDEX[kind] if kind.is_a?(String)
    eagle_item_drop_ex_item_object(kind, data_id)
  end
end
