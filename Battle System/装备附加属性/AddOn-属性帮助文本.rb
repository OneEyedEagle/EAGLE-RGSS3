#=============================================================================
# ■ 属性帮助文本  by 老鹰（http://oneeyedeagle.lofter.com/）
# ※ 本插件需要放置在【装备附加属性-核心 by老鹰】之下
#=============================================================================
# - 2019.10.13.11
#=============================================================================
# TODO
# - 本插件新增了从attrs数组提取帮助文本数组的方法
#      EQUIP_EX.get_attrs_help(attrs)
#--------------------------------------------------------------------------

module EQUIP_EX
  #--------------------------------------------------------------------------
  # ○ 常量：数据库code_id一览
  #--------------------------------------------------------------------------
  HELP_CODE = {
    11 => "属性抗性",
    12 => "弱化抗性",
    13 => "状态抗性",
    14 => "状态免疫",
    21 => "普通能力",
    22 => "添加能力",
    23 => "特殊能力",
    31 => "附带属性",
    32 => "附带状态",
    33 => "攻击速度",
    34 => "添加攻击次数",
    41 => "添加技能类型",
    42 => "禁用技能类型",
    43 => "添加技能",
    44 => "禁用技能",
    51 => "可装备武器类型",
    52 => "可装备护甲类型",
    53 => "固定装备",
    54 => "禁用装备",
    55 => "装备风格",
    61 => "添加行动次数",
    62 => "特殊标志",
    63 => "消失效果",
    64 => "队伍能力"
  }
  #--------------------------------------------------------------------------
  # ○ 常量：普通能力一览
  #--------------------------------------------------------------------------
  # HELP_PARAMS = {
  #   0 => "最大HP",
  #   1 => "最大MP",
  #   2 => "物攻",
  #   3 => "物防",
  #   4 => "魔攻",
  #   5 => "魔防",
  #   6 => "敏捷",
  #   7 => "幸运"
  # }
  def self.get_params_help(param_id)
    if param_id >= 0 and param_id <= 7
      return Vocab.param(param_id)
    end
    return ""
  end
  #--------------------------------------------------------------------------
  # ○ 常量：添加能力一览
  #--------------------------------------------------------------------------
  HELP_XPARAMS = {
    0 => "物理命中几率",
    1 => "物理闪避几率",
    2 => "必杀几率",
    3 => "必杀闪避几率",
    4 => "魔法闪避几率",
    5 => "魔法反射几率",
    6 => "物理反击几率",
    7 => "体力值再生速度",
    8 => "魔力值再生速度",
    9 => "特技值再生速度"
  }
  #--------------------------------------------------------------------------
  # ○ 常量：特殊能力一览
  #--------------------------------------------------------------------------
  HELP_SPARAMS = {
    0 => "受到攻击的几率",
    1 => "防御效果比率",
    2 => "恢复效果比率",
    3 => "药理知识",
    4 => "MP消费率",
    5 => "TP消耗率",
    6 => "物理伤害加成",
    7 => "魔法伤害加成",
    8 => "地形伤害加成",
    9 => "经验获得加成"
  }

  def self.get_item_help(item)
    d = []
    item.params_o.each_with_index do |v, i|
      next if v == 0
      t = get_params_help(i) + attr_help_v2s(v)
      d.push(t)
    end
    item.features_o.each do |f|
      t = ""
      case f.code
      when 21; t = attr_help_params(f.data_id, f.value)
      when 22; t = attr_help_xparams(f.data_id, f.value)
      when 23; t = attr_help_sparams(f.data_id, f.value)
      end
      d.push(t) if t != ""
    end
    if item.eagle_ex
      d += get_attrs_help(attrs)
    end
    return d
  end


  #--------------------------------------------------------------------------
  # ○ 返回指定attrs数组的帮助文本数组
  #--------------------------------------------------------------------------
  def self.get_attrs_help(attrs)
    helps = attrs.collect { |e| attr_help(e) }
    helps.compact
  end
  #--------------------------------------------------------------------------
  # ○ 返回指定attr的帮助文本
  #--------------------------------------------------------------------------
  def self.attr_help(attr)
    return attr_help_ex(attr) if attr[0] == :ex
    return attr_help_params(PARAMS_TO_ID[attr[0]], attr[1]) if attr.size == 2
    if attr.size == 3
      return attr_help_params(attr[1], attr[2]) if attr[0] == 21
      return attr_help_xparams(attr[1], attr[2]) if attr[0] == 22
      return attr_help_sparams(attr[1], attr[2]) if attr[0] == 23
    end
  end
  #--------------------------------------------------------------------------
  # ○ 将数值转化成字符串
  #--------------------------------------------------------------------------
  def self.attr_help_v2s(value)
    return "0" if value == 0
    prefix = value > 0 ? " + " : " - "
    v_ = value.abs
    return sprintf("%s%d\%", prefix, v_ * 100)  if v_ < 1
    return sprintf("%s%d", prefix, v_)
  end
  #--------------------------------------------------------------------------
  # ○ 获取普通能力帮助文本
  #--------------------------------------------------------------------------
  def self.attr_help_params(data_id, value)
    get_params_help(data_id) + attr_help_v2s(value)
  end
  #--------------------------------------------------------------------------
  # ○ 获取添加能力帮助文本
  #--------------------------------------------------------------------------
  def self.attr_help_xparams(data_id, value)
    HELP_XPARAMS[data_id] + attr_help_v2s(value)
  end
  #--------------------------------------------------------------------------
  # ○ 获取特殊能力帮助文本
  #--------------------------------------------------------------------------
  def self.attr_help_sparams(data_id, value)
    HELP_SPARAMS[data_id] + attr_help_v2s(value)
  end
  #--------------------------------------------------------------------------
  # ○ 获取额外属性帮助文本
  #--------------------------------------------------------------------------
  def self.attr_help_ex(attr)
    # attr = [:ex, ...]
    return nil if attr[1] == :lv
  end
end
