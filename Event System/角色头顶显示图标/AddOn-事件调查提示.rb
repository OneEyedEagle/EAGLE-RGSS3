#==============================================================================
# ■ Add-On 事件调查提示 by 老鹰（https://github.com/OneEyedEagle/EAGLE-RGSS3）
# ※ 本插件需要放置在【组件-通用方法汇总 by老鹰】与【角色头顶显示图标 by老鹰】之下
#==============================================================================
$imported ||= {}
$imported["EAGLE-EventTSearchIcon"] = "1.0.1"
#==============================================================================
# - 2022.5.27.21 修正注释的错字
#==============================================================================
# - 本插件新增了玩家接近或面向事件时自动显示图标的功能
#-----------------------------------------------------------------------------
# ○ 玩家接近事件时
#-----------------------------------------------------------------------------
# - 事件页的第一条指令为注释，且里面含有该内容时：
#
#     <头顶图标 icon ...>
#
#     其中 icon 替换为需要显示的图标的ID
#     其中 ... 替换为下列的赋值字符串，可写多条，用空格隔开
#       具体参数可见【角色头顶显示图标】中的 @pop_icon_params
#
#       pos=数字 → 显示位置（0事件头顶，1事件脚底，2事件中心）
#       dir=数字 → 图标移动模式（2朝下移再上移，468同理）
#       opa=数字 → 0为关闭显隐切换效果，1为开启
#       dx=数字 dy=数字 → 坐标的偏移量
#
#   当玩家与事件的距离小于等于指定值时，将在事件头顶显示该图标。
#
# - 高级：
#
#   ·脚本中的 SEARCH_RANGE 常量设置了触发该图标显示的玩家与事件之间的最大距离
#
# - 示例：
#
#      <头顶图标 4>  → 当玩家与事件距离小于等于 3 时，事件头顶显示4号图标
#
#      <头顶图标 160 pos=2> → 同上，事件中心显示160号图标
#
#-----------------------------------------------------------------------------
# ○ 玩家面对事件时
#-----------------------------------------------------------------------------
# - 事件页的第一条指令为注释，且里面含有该内容时：
#
#     <玩家图标 icon ...>
#
#     释义同上
#
#   当玩家面对事件时（按确定键就可触发的状态），将在玩家头顶显示该图标。
#
# - 示例：
#
#      <玩家图标 4>  → 玩家头顶显示4号图标
#
#==============================================================================
module POP_ICON
  #--------------------------------------------------------------------------
  # ●【常量】正则表达式-玩家靠近时，事件头顶显示图标
  #--------------------------------------------------------------------------
  REGEXP_EVENT_NEAR  = /<头顶图标 *(\d+) *?(.*?)>/m
  #--------------------------------------------------------------------------
  # ●【常量】正则表达式-玩家面向事件时，玩家头顶显示图标
  #--------------------------------------------------------------------------
  REGEXT_EVENT_FRONT = /<玩家图标 *(\d+) *?(.*?)>/m

  #--------------------------------------------------------------------------
  # ●【常量】检测半径
  #--------------------------------------------------------------------------
  # 当玩家与事件距离小于等于该值时，激活事件页中设置的图标
  #--------------------------------------------------------------------------
  SEARCH_RANGE = 3
  #--------------------------------------------------------------------------
  # 如果不想把激活距离设置为固定值，可以修改该项为变量序号
  #   该序号的变量的值如果大于0，则会被读取作为距离值
  #   该序号设置为 0 时，依然取 SEARCH_RANGE 设置的固定值
  #--------------------------------------------------------------------------
  V_ID_SEARCH_RANGE = 0

  #--------------------------------------------------------------------------
  # ●【常量】检测频率
  #--------------------------------------------------------------------------
  # 每隔该帧数进行一次图标显示的刷新
  #   需要设置该值小于【角色头顶显示图标】中的MAX_SHOW_FRAME，保证图标连续显示
  #   同时也不要太小，防止刷新频率过多而出现可能的卡顿……
  #--------------------------------------------------------------------------
  FREQ_UPDATE = 7

  #--------------------------------------------------------------------------
  # ● 获取检测半径
  #--------------------------------------------------------------------------
  def self.get_search_range
    v = $game_variables[V_ID_SEARCH_RANGE]
    return v if v > 0
    return SEARCH_RANGE
  end
end

class Game_Player
  #--------------------------------------------------------------------------
  # ● 更新画面
  #--------------------------------------------------------------------------
  alias eagle_search_pop_update update
  def update
    eagle_search_pop_update
    update_search_pop
  end
  #--------------------------------------------------------------------------
  # ● 更新调查图标
  #--------------------------------------------------------------------------
  def update_search_pop
    return if $game_map.interpreter.running?
    @eagle_search_count ||= 0
    @eagle_search_count += 1
    return if @eagle_search_count <= POP_ICON::FREQ_UPDATE
    check_search_pop
    @eagle_search_count = 0
  end
  #--------------------------------------------------------------------------
  # ● 检查事件的调查图标
  #--------------------------------------------------------------------------
  def check_search_pop
    $game_map.events.each do |id, e|
      check_event_near(e)
      check_event_front(e)
    end
  end
  #--------------------------------------------------------------------------
  # ● 检查玩家靠近时显示图标
  #--------------------------------------------------------------------------
  def check_event_near(event)
    d = (event.x - @x).abs + (event.y - @y).abs
    if $imported["EAGLE-PixelMove"]
      d = (event.rgss_x - @rgss_x).abs + (event.rgss_y - @rgss_y).abs
    end
    return if d > POP_ICON.get_search_range
    t = EAGLE_COMMON.event_comment_head(event.list)
    t =~ POP_ICON::REGEXP_EVENT_NEAR
    return if $1 == nil
    event.pop_icon = $1.to_i rescue 0
    h = EAGLE_COMMON.parse_tags($2.lstrip)
    event.pop_icon_params.merge!(h)
  end
  #--------------------------------------------------------------------------
  # ● 检查玩家面向时显示图标
  #--------------------------------------------------------------------------
  def check_event_front(event)
    x2 = $game_map.round_x_with_direction(@x, @direction)
    y2 = $game_map.round_y_with_direction(@y, @direction)
    f = event.x == x2 && event.y == y2
    if $imported["EAGLE-PixelMove"]
      x_p, y_p = get_collision_xy(@direction)
      x2 = $game_map.round_x_with_direction(x_p, @direction)
      y2 = $game_map.round_y_with_direction(y_p, @direction)
      f = event.pos?(x2, y2)
    end
    if f
      t = EAGLE_COMMON.event_comment_head(event.list)
      t =~ POP_ICON::REGEXT_EVENT_FRONT
      return if $1 == nil
      self.pop_icon = $1.to_i rescue 0
      h = EAGLE_COMMON.parse_tags($2.lstrip)
      self.pop_icon_params.merge!(h)
    end
  end
end
