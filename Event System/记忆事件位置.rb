#==============================================================================
# ■ 记忆事件位置 by 老鹰（https://github.com/OneEyedEagle/EAGLE-RGSS3）
# 【此插件兼容VX和VX Ace】
#==============================================================================
$imported ||= {}
$imported["EAGLE-EventPositionMemory"] = "1.0.0"
#==============================================================================
# - 2021.8.29.21
#==============================================================================
# - 本插件新增对事件所在位置的存储
#--------------------------------------------------------------------------
# 【使用】
#
# - 当事件页的第一个指令为注释，且其中含有预设的特殊文本时（默认为 <memory>），
#   在进入地图后，该事件页将会读取上一次离开地图时的所在位置。
#
# 【注意】
#
# - 事件的不同事件页所存储的位置是相互独立的
#   即：离开地图时，事件的第二页为激活状态，则保存的位置为第二页所有，
#      当回到地图时，如果事件激活的为第三页，那么不会重置到第二页时的位置
#
# - 离开当前地图时，全部事件的当前事件页的位置均会被保存
#   进入新地图后，事件页首指令为注释，且含有启用文本时，才会读取之前保存的位置
#
# 【高级】
#
# - 使用全局脚本，对当前地图的指定序号的事件进行位置存储和读取：
#
#    $game_system.save_event_pos(event_id)  → 存储event_id号事件的当前位置
#    $game_system.load_event_pos(event_id)  → 读取event_id号事件的已存储位置
#
#  对于某个事件的某一页，该存储位置只会保存一个。
#
#==============================================================================
module EAGLE
  #--------------------------------------------------------------------------
  # ●【常量】注释中填写的启用记忆事件位置功能的文本
  #--------------------------------------------------------------------------
  EVENT_POSITION_MEMORY = "<memory>"
end
#==============================================================================
# ■ 【读取部分】
#==============================================================================
module EAGLE
  #--------------------------------------------------------------------------
  # ● 读取事件页开头的注释组
  #--------------------------------------------------------------------------
  def self.event_comment_head(command_list)
    return "" if command_list.nil? || command_list.empty?
    t = ""; index = 0
    while command_list[index].code == 108 || command_list[index].code == 408
      t += command_list[index].parameters[0]
      index += 1
    end
    t
  end
end
#==============================================================================
# □ Game_System
#==============================================================================
class Game_System
  #--------------------------------------------------------------------------
  # ● 存储指定事件的位置
  #--------------------------------------------------------------------------
  def save_event_pos(event_id)
    map_id = $game_map.map_id
    @eagle_event_pos ||= {}
    @eagle_event_pos[map_id] ||= {}
    @eagle_event_pos[map_id][event_id] ||= {}
    e = $game_map.events[event_id]
    @eagle_event_pos[map_id][event_id][e.page_id] = [e.x, e.y, e.direction]
  end
  #--------------------------------------------------------------------------
  # ● 读取指定事件的位置
  #--------------------------------------------------------------------------
  def load_event_pos(event_id)
    map_id = $game_map.map_id
    page_id = $game_map.events[event_id].page_id
    v = @eagle_event_pos[map_id][event_id][page_id] rescue nil
    return if v == nil
    e = $game_map.events[event_id]
    e.moveto(v[0], v[1])
    e.set_direction(v[2])
  end
end
#==============================================================================
# □ Game_Map
#==============================================================================
class Game_Map
  #--------------------------------------------------------------------------
  # ● 设置
  #--------------------------------------------------------------------------
  alias eagle_event_pos_setup setup
  def setup(map_id)
    if @events
      @events.each { |eid, e| $game_system.save_event_pos(eid) }
    end
    eagle_event_pos_setup(map_id)
  end
  #--------------------------------------------------------------------------
  # ● 设置事件
  #--------------------------------------------------------------------------
  alias eagle_event_pos_setup_events setup_events
  def setup_events
    eagle_event_pos_setup_events
    @events.each { |eid, e| $game_system.load_event_pos(eid) if e.restore_pos? }
  end
end
#==============================================================================
# □ Game_Event
#==============================================================================
class Game_Event
  attr_reader  :page_id
  #=============================================================================
  # ■ 兼容VX
  #=============================================================================
  if RUBY_VERSION[0..2] == "1.8"
    #--------------------------------------------------------------------------
    # ● 刷新
    #--------------------------------------------------------------------------
    alias eagle_event_pos_refresh refresh
    def refresh
      eagle_event_pos_refresh
      @page_id = @event.pages.index(@page) rescue nil
    end
  else
    #--------------------------------------------------------------------------
    # ● 寻找条件符合的事件页
    #--------------------------------------------------------------------------
    alias eagle_event_pos_find_proper_page find_proper_page
    def find_proper_page
      page = eagle_event_pos_find_proper_page
      @page_id = @event.pages.index(page) rescue nil
      return page
    end
  end
  #--------------------------------------------------------------------------
  # ● 需要读取位置？
  #--------------------------------------------------------------------------
  def restore_pos?
    t = EAGLE.event_comment_head(@page.list) rescue ""
    return true if t.include?(EAGLE::EVENT_POSITION_MEMORY)
    return false
  end
end
