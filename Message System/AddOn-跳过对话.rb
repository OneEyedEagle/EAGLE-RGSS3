#==============================================================================
# ■ Add-On 跳过对话 by 老鹰（http://oneeyedeagle.lofter.com/）
# ※ 本插件需要放置在【对话框扩展 by老鹰】之下
#==============================================================================
$imported ||= {}
$imported["EAGLE-MessageSkip"] = true
#==============================================================================
# - 2021.6.26.19
#==============================================================================
# - 本插件为对话框新增了对话跳过功能
#----------------------------------------------------------------------------
# 【使用】
#
#    长按空格，会显示一个按键提示精灵，具体可在下列常量中设置。
#
#    按住一段时间后，将启用对话的自动跳过。
#
# 【注意】
#
#    该跳过会直接忽略掉还未被绘制的转义符。
#
#    请自行确保转义符的跳过，不会影响全局的效果。
#
#==============================================================================
module MESSAGE_EX
  #--------------------------------------------------------------------------
  # ○【常量】当持续该帧数未开启对话框时，阻止对话跳过UI的显示
  #--------------------------------------------------------------------------
  SKIP_COUNT_SHOW_MAX = 180

  #--------------------------------------------------------------------------
  # ○【常量】长按该键持续一定帧数后，启用对话跳过功能
  #--------------------------------------------------------------------------
  SKIP_KEY = :C  # 确定键（z键、空格）
  #--------------------------------------------------------------------------
  # ○【常量】所需的按键持续帧数
  #--------------------------------------------------------------------------
  SKIP_COUNT_MAX = 90

  #--------------------------------------------------------------------------
  # ○【常量】精灵中央显示的文本
  #--------------------------------------------------------------------------
  SKIP_HINT_TEXT = "跳过"

  #--------------------------------------------------------------------------
  # ○【常量】精灵的显示原点类型
  #
  #  按九宫格小键盘，将精灵的显示原点分成了9个类型（4个顶点，4个边中点，中心点）
  #   1代表左下角为原点，5代表中心点为原点，9代表右上角为原点
  #--------------------------------------------------------------------------
  SKIP_SHOW_O  = 5
  #--------------------------------------------------------------------------
  # ○【常量】精灵的显示位置类型
  #
  #   1~ 9 代表在对话框的对应位置，如1代表在对话框的左下角，5代表对话框中心
  #  -1~-1 代表在屏幕对应位置，如-1代表在屏幕左下角，5代表在屏幕中心
  #--------------------------------------------------------------------------
  SKIP_SHOW_DO = -5

  #--------------------------------------------------------------------------
  # ○【常量】精灵的x坐标增量
  #--------------------------------------------------------------------------
  SKIP_SHOW_DX = 0
  #--------------------------------------------------------------------------
  # ○【常量】精灵的y坐标增量
  #--------------------------------------------------------------------------
  SKIP_SHOW_DY = 100

  #--------------------------------------------------------------------------
  # ○【常量】精灵位图的宽度
  #--------------------------------------------------------------------------
  SKIP_SPRITE_W = 60
  #--------------------------------------------------------------------------
  # ○【常量】精灵位图的高度
  #--------------------------------------------------------------------------
  SKIP_SPRITE_H = 40

  #--------------------------------------------------------------------------
  # ○【常量】精灵的z值增加量（以对话框的z值为初始值）
  #--------------------------------------------------------------------------
  SKIP_SPRITE_Z = +20

end

#=============================================================================
# ○ Window_EagleMessage
#=============================================================================
class Window_EagleMessage
  #--------------------------------------------------------------------------
  # ● 初始化组件
  #--------------------------------------------------------------------------
  alias eagle_skip_dialog_init_assets eagle_message_init_assets
  def eagle_message_init_assets
    eagle_skip_dialog_init_assets
    @sprite_skip = Sprite_EagleMsgSkip.new(self)
  end
  #--------------------------------------------------------------------------
  # ● 释放
  #--------------------------------------------------------------------------
  alias eagle_skip_dialog_dispose dispose
  def dispose
    @sprite_skip.dispose
    eagle_skip_dialog_dispose
  end
  #--------------------------------------------------------------------------
  # ● 更新（在 @fiber 更新之前）
  #--------------------------------------------------------------------------
  alias eagle_skip_dialog_update_before_fiber eagle_update_before_fiber
  def eagle_update_before_fiber
    eagle_skip_dialog_update_before_fiber
    @sprite_skip.update
  end
  #--------------------------------------------------------------------------
  # ● 对话框打开后进行扩展功能更新
  #--------------------------------------------------------------------------
  alias eagle_skip_dialog_update_func_after_open eagle_update_func_after_open
  def eagle_update_func_after_open
    eagle_skip_dialog_update_func_after_open
    force_close if @sprite_skip.active?
  end
end

#=============================================================================
# ○ SKIP精灵
#=============================================================================
class Sprite_EagleMsgSkip < Sprite
  #--------------------------------------------------------------------------
  # ● 初始化
  #--------------------------------------------------------------------------
  def initialize(window_bind)
    super(nil)
    bind_window(window_bind)
    deactivate
    init_bitmap
  end
  def bind_window(window_bind); @window_bind = window_bind; end
  #--------------------------------------------------------------------------
  # ● 释放
  #--------------------------------------------------------------------------
  def dispose
    self.bitmap.dispose
    @temp_bitmap.dispose
    super
  end
  #--------------------------------------------------------------------------
  # ● 初始化位图
  #--------------------------------------------------------------------------
  def init_bitmap
    self.bitmap = Bitmap.new(MESSAGE_EX::SKIP_SPRITE_W,
      MESSAGE_EX::SKIP_SPRITE_H)
    self.bitmap.font.color = Color.new(255,255,255,150)
    self.bitmap.font.shadow = false
    self.bitmap.font.outline = false
    # 用于复制反色文字
    @temp_bitmap = Bitmap.new(self.width, self.height)
    @temp_bitmap.font.color = Color.new(0,0,0,255)
    @temp_bitmap.font.shadow = false
    @temp_bitmap.font.outline = false
    t = MESSAGE_EX::SKIP_HINT_TEXT
    @temp_bitmap.draw_text(0, 0, self.width, self.height, t, 1)
  end
  #--------------------------------------------------------------------------
  # ● 更新
  #--------------------------------------------------------------------------
  def update
    update_show
    update_count if show?
    update_when_visible if self.visible
  end
  #--------------------------------------------------------------------------
  # ● 更新UI显示计数
  #--------------------------------------------------------------------------
  def update_show
    return @count_show = 0 if @window_bind.openness > 0
    @count_show += 1
    # 当该计数到一定值时，阻止呼叫快进（对话框打开则重置为0）
    deactivate if @count_show == MESSAGE_EX::SKIP_COUNT_SHOW_MAX
  end
  #--------------------------------------------------------------------------
  # ● 满足UI出现的条件？
  #--------------------------------------------------------------------------
  def show?
    @count_show < MESSAGE_EX::SKIP_COUNT_SHOW_MAX
  end
  #--------------------------------------------------------------------------
  # ● 更新计数
  #--------------------------------------------------------------------------
  def update_count
    if Input.press?(MESSAGE_EX::SKIP_KEY)
      @count += 1
    else
      @count -= 1
    end
    @count = count_max if @count > count_max
    @count = 0 if @count < 0
    @count > 0 ? activate : deactivate
  end
  #--------------------------------------------------------------------------
  # ● 可见时更新
  #--------------------------------------------------------------------------
  def update_when_visible
    redraw if @count_last != @count
    update_position
  end
  #--------------------------------------------------------------------------
  # ● 更新位置
  #--------------------------------------------------------------------------
  def update_position
    MESSAGE_EX.reset_sprite_oxy(self, MESSAGE_EX::SKIP_SHOW_O)
    MESSAGE_EX.reset_xy_dorigin(self, @window_bind, MESSAGE_EX::SKIP_SHOW_DO)
    self.x += MESSAGE_EX::SKIP_SHOW_DX
    self.y += MESSAGE_EX::SKIP_SHOW_DY
    self.z = @window_bind.z + MESSAGE_EX::SKIP_SPRITE_Z
  end
  #--------------------------------------------------------------------------
  # ● 激活显示
  #--------------------------------------------------------------------------
  def activate
    self.visible = true
  end
  #--------------------------------------------------------------------------
  # ● 隐藏
  #--------------------------------------------------------------------------
  def deactivate
    @count = 0
    @count_last = 0
    self.visible = false
    @count_show = MESSAGE_EX::SKIP_COUNT_SHOW_MAX
  end
  #--------------------------------------------------------------------------
  # ● 满足跳过对话的条件？
  #--------------------------------------------------------------------------
  def active?
    @count >= count_max
  end
  #--------------------------------------------------------------------------
  # ● 计数上限
  #--------------------------------------------------------------------------
  def count_max
    MESSAGE_EX::SKIP_COUNT_MAX
  end
  #--------------------------------------------------------------------------
  # ● 计数比例
  #--------------------------------------------------------------------------
  def count_rate
    @count * 1.0 / count_max
  end
  #--------------------------------------------------------------------------
  # ● 重绘
  #--------------------------------------------------------------------------
  def redraw
    @count_last = @count
    b = self.bitmap
    b.clear
    b.fill_rect(0, 0, self.width, self.height, Color.new(255,255,255,150))
    _y = self.height*(1-count_rate)
    r = Rect.new(1, 1, self.width-2, _y-2)
    b.fill_rect(r, Color.new(0,0,0,150))
    # 绘制正色文字
    t = MESSAGE_EX::SKIP_HINT_TEXT
    b.draw_text(0, 0, self.width, self.height, t, 1)
    # 绘制反色文字
    r2 = Rect.new(0, _y, self.width, self.height)
    b.blt(0, _y, @temp_bitmap, r2)
  end
end
