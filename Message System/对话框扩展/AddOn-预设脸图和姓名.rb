#==============================================================================
# ■ Add-On 预设脸图和姓名 by 老鹰
# ※ 本插件需要放置在【对话框扩展 by老鹰】之下
#==============================================================================
$imported ||= {}
$imported["EAGLE-MsgSetFace"] = "1.0.0"
#=============================================================================
# - 2022.9.14.23
#==============================================================================
# - 本插件新增了预设脸图、姓名的方式，方便进行事件编写
#------------------------------------------------------------------------------
# 【预设：文本对应脸图】
#
# - 在 PRESERVE_FACES 常量中如下方式设置角色的名称、表情，及对应的脸图
#
# - 推荐在本插件下，新增一个空白页，命名为“【对话框脸图预设】”，
#   并复制如下的内容，进行修改和扩写：
#
=begin
# --------复制以下的内容！--------

module MESSAGE_EX
#--------------------------------------------------------------------------
# 这是一个示例，推荐不要变动，方便之后复制

PRESERVE_FACES["艾里克"] = {

  # 设置一下默认的脸图文件名，如果表情没有设置文件名的话，就用这张脸图了
  :default => "Actor1",

  # 设置表情和对应的脸图索引号，和编辑器中的一样
  # 注意：对话框扩展中对脸图格式进行了解放，
  #       如果文件名中含有 _mxn 字样，就可以使用超过 0~7 范围的索引号
  "微笑" => 0,
  
  # 如果表情在别的文件，则写一个数组，并把文件名放到第二位
  "疑惑" => [1, "Actor1"],

}

#--------------------------------------------------------------------------
# 接下来写你自己的吧！

PRESERVE_FACES["主角名字"] = {
  :default => "Actor2",
  
  "无语" => 0,
  "微笑" => 1,
  "大哭" => 2,
}

#--------------------------------------------------------------------------
end  # 必须的模块结尾，不要漏掉

# --------复制以上的内容！--------
=end
#
#------------------------------------------------------------------------------
# 【使用：文本对应脸图】
#
# - 在对话文本中编写如下文本，来进行快捷的脸图、姓名设置：
#
#     【姓名#表情】
#
#   其中 【】 可在 PRESERVE_SYM1 和 PRESERVE_SYM2 中修改，为识别符号
#   其中  #   可在 PRESERVE_SPLIT 中修改，为姓名和表情之间的分隔符号
#   其中 姓名 为显示在姓名框中的文本，也是用于查找脸图的索引
#   其中 表情 为预设的表情名称，如果不存在，则不显示脸图
#
# - 示例：
#
#     这是测试用对话【艾里克#微笑】  → 将显示预设的Actor1文件中的第一个脸图
#
# 【注意】
#
# - 本质是在对话框打开前、进行文本替换时，优先查找并设置姓名和脸图
#
# - 请确保编写格式不会与其它插件出现重合，也不会与你自己的文本排版习惯冲突
#
# - 如果在事件中为显示文本设置了脸图，则本插件的脸图设置无效
#
# - 如果在对话中编写了 \name 转义符设置姓名，则本插件的姓名设置无效
#
#------------------------------------------------------------------------------
# 【TODO：脸图设置姓名】
#
#==============================================================================

module MESSAGE_EX
  #--------------------------------------------------------------------------
  # ●【常量】设置识别符号
  #--------------------------------------------------------------------------
  PRESERVE_SYM1 = "【"    # "<<"
  PRESERVE_SYM2 = "】"    # ">>"
  #--------------------------------------------------------------------------
  # ●【常量】设置分隔符号
  #--------------------------------------------------------------------------
  PRESERVE_SPLIT = '#'
  #--------------------------------------------------------------------------
  # ●【常量】
  # 姓名 => { 
  #   :default => 默认脸图文件名,
  #   表情名 => 索引,
  #   表情名 => [索引, 脸图文件名],
  # }
  #--------------------------------------------------------------------------
  PRESERVE_FACES = {}
  #--------------------------------------------------------------------------
  # ●【自定义：文本设置脸图】
  #--------------------------------------------------------------------------
  PRESERVE_FACES["艾里克"] = {
    :default => "Actor1",

    "微笑" => 0,
    "疑惑" => [1, "Actor1"],
  }
  #--------------------------------------------------------------------------
  # ●【自定义：脸图设置姓名】
  #--------------------------------------------------------------------------
  FACE2NAME = {}
  #--------------------------------------------------------------------------
  # ● 读取对应的脸图设置
  #--------------------------------------------------------------------------
  def self.get_face_by_text(name, face_name)
    h = PRESERVE_FACES[name]
    return "", 0 if h.nil?
    a = h[face_name]
    return "", 0 if a.nil?
    if a.is_a?(Array)
      i = a[0]
      n = a[1] || h[:default] || "" 
    else
      i = a
      n = h[:default] || ""
    end
    return n, i
  end
end

class Window_EagleMessage
  #--------------------------------------------------------------------------
  # ● 替换转义符（此时依旧是 \\ 开头的转义符）
  #--------------------------------------------------------------------------
  alias eagle_facename_process_conv eagle_process_conv
  def eagle_process_conv(text)
    fn = ""
    name_params[:preserve] = ""
    text.gsub!(/#{MESSAGE_EX::PRESERVE_SYM1}(.*?)#{MESSAGE_EX::PRESERVE_SYM2}/i) {
      if $1.include?(MESSAGE_EX::PRESERVE_SPLIT)
        n, f = $1.split(MESSAGE_EX::PRESERVE_SPLIT)
        name_params[:preserve] = n.strip 
        fn = f.strip
        ""
      else
        MESSAGE_EX::PRESERVE_SYM1 + $1 + MESSAGE_EX::PRESERVE_SYM2
      end
    }
    if name_params[:preserve] != "" && fn != "" && game_message.face_name == ""
      n, i = MESSAGE_EX.get_face_by_text(name_params[:preserve], fn)
      game_message.face_name = n
      game_message.face_index = i
    end
    eagle_facename_process_conv(text)
  end
  #--------------------------------------------------------------------------
  # ● 绘制姓名框
  #--------------------------------------------------------------------------
  alias eagle_facename_process_draw_name process_draw_name
  def process_draw_name
    if name_params[:name] == "" && name_params[:preserve] != ""
      name_params[:name] = name_params[:preserve]
    end
    name_params[:preserve] = ""
    #if name_params[:name] == "" && game_message.face_name != ""
    #  name_params[:name] = 
    #end
    eagle_facename_process_draw_name
  end
end
