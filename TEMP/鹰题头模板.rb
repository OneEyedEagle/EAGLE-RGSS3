=begin
===============================================================================

    ┌--------------------------------------------------------------------┐
    ┆            ,""---.                                                 ┆
    ┆          ㄏ       `.                                               ┆
    ┆       _ノ ㄏō       \                                              ┆
    ┆      / ´             y                                             ┆
    ┆      \J==ノ   by.老鹰 （脚本小巢 → http://oneeyedeagle.lofter.com/）
    └--------------------------------------------------------------------┘

     ■ 脚本标题 ver1.01
       
        脚本的介绍说明口口口口口口口口口口口口口口口口口口口口口口一行到这里，
        下一行口口口口口口口口口。
     
     
     ▼ 使用方法 ·=========================================================
      
       event = $game_map.copy_event(map_id, event_id, x, y, sub_id)
      
       map_id   → 存放模版事件的地图id，若传入 0 则为当前地图。
       event_id → 模版事件的id
       x, y     → 拷贝事件的地图坐标
       sub_id   → （选填）覆盖当前地图已存在的相同id事件；
                   默认为当前地图最大事件id+100，不覆盖现有事件。
       event    → （选填）对复制事件的扩展运用。若拷贝失败，则为nil。
       
       ------------------------------------------------------------------
       □ 示例
       
       $game_map.copy_event(0, 3, 2, 2)
          → 将当前地图的3号事件拷贝一份，并放置到(2,2)。

       event = $game_map.copy_event(1, 6, 12, 5, 1)
          → 将1号地图的6号事件拷贝一份，并放置到(12,5)，
             它在当前地图的实例为 event，ID为1（覆盖原ID为1的事件）。
             
       ------------------------------------------------------------------
       □ 注意
       
       当未指定拷贝后的事件ID时，拷贝事件的ID是动态增加的，
       因此推荐不要在事件内部使用独立开关，
       独立开关是全局存储，且只与地图ID/事件ID/开关名称相关，易发生冲突。
      
     ======================================================================
        -                                                              -
        
     ▼ 拷贝事件的保存 ·===================================================

       在任意地方（事件脚本、全局脚本）调用 $game_map.save_copy
       来保存当前地图的拷贝事件，下一次返回该地图时，将全部复原

       每一次切换地图时，该值将重置为关闭，即不复原拷贝事件，
       如果想继续使当前地图也能复原拷贝事件，请再次调用该事件脚本

       或者可以通过打开 S_ID_COPY_SAVE 号开关，来长时间启用这个 保存-复原 的
       状态当开关开启时，将不用再管事件脚本的开关

       只会保存基本信息，下一次回到地图复原时，本质依然是从原始地图拷贝到保存
       的位置。
     
     ======================================================================
        -                                                              -
        
     ▼ 使用方法例二 ·=====================================================
     
     □ 文本替换类
       
       \M           - 自定义扩张（宏）。
       \RB          - 利用Ruby脚本获取替换文本。
       \info        - 显示数据库指定对象的图标和名称。
       \nl          - 新增的换行符。
       
       ------------------------------------------------------------------
       
     □ 绘制类

       \pic         - 绘制图片。
       
       ------------------------------------------------------------------
       
     □ 控制类
     
       \font        - 文字绘制的基本设置，包括文字大小、加粗、阴影、边框、
                       发光、底纹等。
       \win         - 对话框的基本设置，包括对话框皮肤背景、位置、大小、文字
                       显示等。
       \move        - 对话框的动态移动。
       \auto        - 自动对话的设置，包括自动继续的等待时间、
                      是否新对话框重置等。
       \pop         - 气泡对话框的基本设置，包括显示位置、大小、指示箭头等。
       \face        - 脸图的动态设置，包括脸图当前显示索引、循环等。
       \facep       - 脸图的预先设置，包括脸图位置、移入移出方式等。
       \facem       - 脸图的实时动作，包括跳跃、移动等。
       
     ======================================================================
        -                                                              -
        
     ▼ 使用方法例三 ·=====================================================
     
     □ 文本替换类
        此类别的转义符将会在绘制开始前，预先进行目标文本的替换，
        将按照下面的排列顺序进行先后替换，因此请注意相互之间的嵌套模式。

        \conv[n]
        
        替换文本(宏)。替换【设置】中 CONVERT_ESCAPE列表里的n号文本。
        根据使用方法的不同，可以大幅简化各种文章的嵌入作业。
       
       ------------------------------------------------------------------
               
     □ 控制类
     
        ▍格式写法：\xx[a1b2c3] 
        
        a、b、c等左英文 为“功能项”。
        - 只需填写需要的功能，不写的取【设置】中的预设值，可打乱顺序。
        
        1、2、3等右数字 为对应“功能项”的值。
        - 下方含有“是否”描述的功能项，正数（推荐1）→ true ；0 → false。
        - 符号 $ 代表nil。未说明 nil 的功能项，请不要传入 nil（$）。
        
        
        \font[p]        ▍单个文字的绘制
        
          size          - 字体大小（默认值24）
          i             - 是否 文字斜体（1/0）
          b             - 是否 文字加粗（1/0）
          s             - 是否 文字阴影（1/0）
          ca            - 文字不透明度（0~255）
          o             - 是否 添加边框（1/0）
          or/og/ob/oa   - 边框颜色 RGBA（0~255） 例：[or255og255ob255oa0]
          p             - 底部花纹 类型（0不绘制，1边框，2实心方框）
          pc            - 底部花纹 颜色序号（同\C[n]中的n）
          l             - 是否绘制外发光（1/0）
          lc            - 外发光 颜色序号（同\C[n]中的n）
          d             - 是否 绘制删除线（1/0）
          dc            - 删除线 颜色序号（同\C[n]中的n）
          
                    
        \win[p]         ▍对话框窗口的基本设置
        
          z             - 窗口z值（仅正整数有效）（默认值200）
          skin          - 窗口皮肤（【设置】中 INDEX_TO_WINDOWSKIN 的序号）
              
    
     ======================================================================
        -                                                              -
     
     更新历史
     ----------------------------------------------------------------------
     - 2019.12.16.20 增强pop的兼容性
     - 2019.12.16.20 增强pop的兼容性
     ----------------------------------------------------------------------
     - 2018.1.16.20  增强pop的兼容性
     ----------------------------------------------------------------------
     
===============================================================================
=end







$imported ||= {}
$imported["EAGLE-MessageEX"] = true
#==============================================================================
# ■ Window_Message
#==============================================================================


